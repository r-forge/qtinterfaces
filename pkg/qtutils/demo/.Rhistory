library(flowViz)
data(GvHD)\
data(GvHD)
 jhnjh"
wf
str(wf)
wf@tree
str(wf@tree)
get(wf@tree)
tree(wf)
qstr(.GlobalEnv)
library(qtutils)
qstr(.GlobalEnv)
tree(wf)
tree(wf)@env
wf@tree@env
qstr(wf@env)
nodes(tree(wf)
)
wf
tree(wf)
names(wf)
wf[["base view"]]
nodes(tree(wf))
library(graph)
adj(tree(wf))
adj(tree(wf), nodes(tree(wf))[1])
class(wf)
alias(wf)
ls(alias(wf))
ls(wf[["base view"]])
alias(wf[["base view"]])
ls(alias(wf[["base view"]]))
alias(wf)[["base view"]]
eapply(alias(wf), I)
names(wf[["base view"]])
adjbase
adjbase
wf[[adjbase[1]]]
names(wf[[adjbase[1]]])
qstr
qstr(wf)
qstr(wf)
showClass("gateView")
is(wf)
lm(1:10 ~ rnorm(10))
is(lm(1:10 ~ rnorm(10)))
is(glm(sample(0:1, 10, TRUE) ~ rnorm(10)))
qtextEdit(
qtextEdit
qstr(wf)
qstr(wf)
qstr(wf)
qstr(wf)
wf[["defaultRectangleGate+"]]
qstr(wf[["defaultRectangleGate+"]])
qstr
debug(qstr)
qstr(wf)
ls()
class(x)
qstr
qstr(wf)
ls()
rm(qstr)
qstr(wf)
qstr(wf)
undebug(qstr)
qstr(wf)
?NextMethod
setMethod("qstr", "workFlow",
          function(x, ...)
      {
          require(graph)
          tree <- tree(x)
          adjbase <- adj(tree, nodes(tree)[1])[[1]]
          xlist <- lapply(adjbase, function(nm) x[[nm]])
          names(xlist) <- sapply(adjbase, function(nm) names(x[[nm]]))
          x <- xlist
          NextMethod("qstr", x)
      })
qstr(wf)
NextMethod
qstr(wf)
traceback()
?NextMethod
?callNextMethod
qstr(wf)
qstr(wf)
qstr(wf)
qstr
wf[["defaultRectangleGate+"]]
x <- wf[["defaultRectangleGate+"]]
str(x)
x
names(x)
tree(x)
parent(x)
tree(parent(x))
ls(x@env)
)
tree
rm(tree)
tree
tree(x)
adj(tree(x), nodes(tree(x))[1])[[1]]
x[["gateViewRef_23fe9f629e1"]]
x@env[["gateViewRef_23fe9f629e1"]]
class(x)
nodes(tree(x))
identifier
         adj(tree(x), identifier(x))[[1]]
qstr(wf)
rg2
qbrowser()
qstr(wf)
qstr(wf)
wf[["defaultRectangleGate+"]]
wf
removeMethod("qstr", "baseView")
removeMethod("qstr", "gateView")
qstr(wf)
qstr(wf)
qstr(wf)
qstr(wf)
qstr(wf)
slotNames(wf)
slotNames(x)
qstr(wf)
n
