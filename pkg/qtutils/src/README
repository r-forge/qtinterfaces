
A few of Qt's classes that could have very basic wrappers:



Advanced Widgets

These classes provide more complex user interface widgets (controls).

QCalendarWidget	Monthly based calendar widget allowing the user to select a date
QColumnView	Model/view implementation of a column view
QDataWidgetMapper	Mapping between a section of a data model to widgets
QDesktopWidget	Access to screen information on multi-head systems
QListView	List or icon view onto a model
QTableView	Default model/view implementation of a table view
QTreeView	Default model/view implementation of a tree view
QUndoView	Displays the contents of a QUndoStack
QWebView	Widget that is used to view and edit web documents
QX11EmbedContainer	XEmbed container widget
QX11EmbedWidget	XEmbed client widget
Phonon::VideoWidget	Widget that is used to display video


Basic Widgets

These basic widgets (controls) are designed for direct use. There are
also some Abstract Widget Classes that are designed for subclassing,
and some more complex Advanced Widgets.

QCheckBox	Checkbox with a text label
QComboBox	Combined button and popup list
QCommandLinkButton	Vista style command link button
QDateEdit	Widget for editing dates based on the QDateTimeEdit widget
QDateTimeEdit	Widget for editing dates and times
QDial		Rounded range control (like a speedometer or potentiometer)
QDoubleSpinBox	Spin box widget that takes doubles
QFocusFrame	Focus frame which can be outside of a widget's normal paintable area
QFontComboBox	Combobox that lets the user select a font family
QLCDNumber	Displays a number with LCD-like digits
QLabel		Text or image display
QLineEdit	One-line text editor
QMenu		Menu widget for use in menu bars, context menus, and other popup menus
QProgressBar	Horizontal or vertical progress bar
QPushButton	Command button
QRadioButton	Radio button with a text label
QScrollArea	Scrolling view onto another widget
QScrollBar	Vertical or horizontal scroll bar
QSizeGrip	Resize handle for resizing top-level windows
QSlider		Vertical or horizontal slider
QSpinBox	Spin box widget
QTabBar		Tab bar, e.g. for use in tabbed dialogs
QTabWidget	Stack of tabbed widgets
QTimeEdit	Widget for editing times based on the QDateTimeEdit widget
QToolBox	Column of tabbed widget items
QToolButton	Quick-access button to commands or options, usually used inside a QToolBar
QWidget		The base class of all user interface objects


Drag And Drop Classes

These classes deal with drag and drop and the necessary mime type encoding and decoding. See also Drag and Drop with Qt.

QDragEnterEvent	Event which is sent to a widget when a drag and drop action enters it
QDragLeaveEvent	Event that is sent to a widget when a drag and drop action leaves it
QDragMoveEvent	Event which is sent while a drag and drop action is in progress
QDropEvent	Event which is sent when a drag and drop action is completed


Layout Management

These classes provide automatic geometry (layout) management of widgets.

QBoxLayout	Lines up child widgets horizontally or vertically
QButtonGroup	Container to organize groups of button widgets
QFormLayout	Manages forms of input widgets and their associated labels
QGridLayout	Lays out widgets in a grid
QGroupBox	Group box frame with a title
QHBoxLayout	Lines up widgets horizontally
QLayout	The base class of geometry managers
QLayoutItem	Abstract item that a QLayout manipulates
QSizePolicy	Layout attribute describing horizontal and vertical resizing policy
QSpacerItem	Blank space in a layout
QStackedLayout	Stack of widgets where only one widget is visible at a time
QStackedWidget	Stack of widgets where only one widget is visible at a time
QVBoxLayout	Lines up widgets vertically
QWidgetItem	Layout item that represents a widget


Main Window and Related Classes

These classes provide everything you need for a typical modern main
application window, like the main window itself, menu and tool bars, a
status bar, etc.

QAbstractEventDispatcher	Interface to manage Qt's event queue
QAction		Abstract user interface action that can be inserted into widgets
QActionGroup	Groups actions together
QApplication	Manages the GUI application's control flow and main settings
QCoreApplication	Event loop for console Qt applications
QDialogButtonBox	Widget that presents buttons in a layout that is appropriate to the current widget style
QDockWidget	Widget that can be docked inside a QMainWindow or floated as a top-level window on the desktop
QMainWindow	Main application window
QMdiArea	Area in which MDI windows are displayed
QMdiSubWindow	Subwindow class for QMdiArea
QMenu		Menu widget for use in menu bars, context menus, and other popup menus
QMenuBar	Horizontal menu bar
QSessionManager	Access to the session manager
QSizeGrip	Resize handle for resizing top-level windows
QStatusBar	Horizontal bar suitable for presenting status information
QSystemTrayIcon	Icon for an application in the system tray
QToolBar	Movable panel that contains a set of controls
QWidgetAction	Extends QAction by an interface for inserting custom widgets into action based containers, such as toolbars



Model/View Classes

These classes use the model/view design pattern in which the underlying data (in the model) is kept separate from the way the data is presented and manipulated by the user (in the view). See also Model/View Programming.

QAbstractItemDelegate	Used to display and edit data items from a model
QAbstractItemModel	The abstract interface for item model classes
QAbstractItemView	The basic functionality for item view classes
QAbstractListModel	Abstract model that can be subclassed to create one-dimensional list models
QAbstractProxyModel	Base class for proxy item models that can do sorting, filtering or other data processing tasks
QAbstractTableModel	Abstract model that can be subclassed to create table models
QColumnView		Model/view implementation of a column view
QDataWidgetMapper	Mapping between a section of a data model to widgets
QDirModel		Data model for the local filesystem
QFileSystemModel	Data model for the local filesystem
QHeaderView		Header row or header column for item views
QItemDelegate		Display and editing facilities for data items from a model
QItemEditorCreator	Makes it possible to create item editor creator bases without subclassing QItemEditorCreatorBase
QItemEditorCreatorBase	Abstract base class that must be subclassed when implementing new item editor creators
QItemEditorFactory	Widgets for editing item data in views and delegates
QItemSelection		Manages information about selected items in a model
QItemSelectionModel	Keeps track of a view's selected items
QItemSelectionRange	Manages information about a range of selected items in a model
QListView		List or icon view onto a model
QListWidget		Item-based list widget
QListWidgetItem		Item for use with the QListWidget item view class
QModelIndex		Used to locate data in a data model
QPersistentModelIndex	Used to locate data in a data model
QProxyModel		Support for processing data passed between another model and a view
QSortFilterProxyModel	Support for sorting and filtering data passed between another model and a view
QStandardItem		Item for use with the QStandardItemModel class
QStandardItemEditorCreator	The possibility to register widgets without having to subclass QItemEditorCreatorBase
QStandardItemModel	Generic model for storing custom data
QStringListModel	Model that supplies strings to views
QStyledItemDelegate	Display and editing facilities for data items from a model
QTableView		Default model/view implementation of a table view
QTableWidget		Item-based table view with a default model
QTableWidgetItem	Item for use with the QTableWidget class
QTableWidgetSelectionRange	Way to interact with selection in a model without using model indexes and a selection model
QTreeView		Default model/view implementation of a tree view
QTreeWidget		Tree view that uses a predefined tree model
QTreeWidgetItem		Item for use with the QTreeWidget convenience class
QTreeWidgetItemIterator	Way to iterate over the items in a QTreeWidget instance




Multimedia, Graphics and Printing

These classes provide support for graphics (2D, and with OpenGL, 3D),
image encoding, decoding, and manipulation, sound, animation, printing
etc.

See also this introduction to the Qt coordinate system.

QAbstractGraphicsShapeItem	Common base for all path items
QBitmap	Monochrome (1-bit depth) pixmaps
QBrush	Defines the fill pattern of shapes drawn by QPainter
QColor	Colors based on RGB, HSV or CMYK values
QColorDialog	Dialog widget for specifying colors
QColormap	Maps device independent QColors to device dependent pixel values
QConicalGradient	Used in combination with QBrush to specify a conical gradient brush
QFont	Specifies a font used for drawing text
QFontDatabase	Information about the fonts available in the underlying window system
QFontInfo	General information about fonts
QFontMetrics	Font metrics information
QFontMetricsF	Font metrics information
QGL	Specifies miscellaneous identifiers used in the Qt OpenGL module
QGLColormap	Used for installing custom colormaps into QGLWidgets
QGLContext	Encapsulates an OpenGL rendering context
QGLFormat	Specifies the display format of an OpenGL rendering context
QGLFramebufferObject	Encapsulates an OpenGL framebuffer object
QGLPixelBuffer	Encapsulates an OpenGL pbuffer
QGLWidget	Widget for rendering OpenGL graphics
QGradient	Used in combination with QBrush to specify gradient fills
QGraphicsEllipseItem	Ellipse item that you can add to a QGraphicsScene
QGraphicsGridLayout	Grid layout for managing widgets in Graphics View
QGraphicsItem	The base class for all graphical items in a QGraphicsScene
QGraphicsItemAnimation	Simple animation support for QGraphicsItem
QGraphicsItemGroup	Treating a group of items as one
QGraphicsLayout	The base class for all layouts in Graphics View
QGraphicsLayoutItem	Can be inherited to allow your custom items to be managed by layouts
QGraphicsLineItem	Line item that you can add to a QGraphicsScene
QGraphicsLinearLayout	Horizontal or vertical layout for managing widgets in Graphics View
QGraphicsPathItem	Path item that you can add to a QGraphicsScene
QGraphicsPixmapItem	Pixmap item that you can add to a QGraphicsScene
QGraphicsPolygonItem	Polygon item that you can add to a QGraphicsScene
QGraphicsProxyWidget	Proxy layer for embedding a QWidget in a QGraphicsScene
QGraphicsRectItem	Rectangle item that you can add to a QGraphicsScene
QGraphicsScene	Surface for managing a large number of 2D graphical items
QGraphicsSceneContextMenuEvent	Context menu events in the graphics view framework
QGraphicsSceneDragDropEvent	Events for drag and drop in the graphics view framework
QGraphicsSceneEvent	Base class for all graphics view related events
QGraphicsSceneHelpEvent	Events when a tooltip is requested
QGraphicsSceneHoverEvent	Hover events in the graphics view framework
QGraphicsSceneMouseEvent	Mouse events in the graphics view framework
QGraphicsSceneMoveEvent	Events for widget moving in the graphics view framework
QGraphicsSceneResizeEvent	Events for widget resizing in the graphics view framework
QGraphicsSceneWheelEvent	Wheel events in the graphics view framework
QGraphicsSimpleTextItem	Simple text path item that you can add to a QGraphicsScene
QGraphicsSvgItem	QGraphicsItem that can be used to render the contents of SVG files
QGraphicsTextItem	Text item that you can add to a QGraphicsScene to display formatted text
QGraphicsView	Widget for displaying the contents of a QGraphicsScene
QGraphicsWidget	The base class for all widget items in a QGraphicsScene
QIcon	Scalable icons in different modes and states
QIconEngine	Abstract base class for QIcon renderers
QIconEngineV2	Abstract base class for QIcon renderers
QImage	Hardware-independent image representation that allows direct access to the pixel data, and can be used as a paint device
QImageReader	Format independent interface for reading images from files or other devices
QImageWriter	Format independent interface for writing images to files or other devices
QLine	Two-dimensional vector using integer precision
QLineF	Two-dimensional vector using floating point precision
QLinearGradient	Used in combination with QBrush to specify a linear gradient brush
QMatrix	Specifies 2D transformations of a coordinate system
QMovie	Convenience class for playing movies with QImageReader
QPaintDevice	The base class of objects that can be painted
QPaintEngine	Abstract definition of how QPainter draws to a given device on a given platform
QPainter	Performs low-level painting on widgets and other paint devices
QPainterPath	Container for painting operations, enabling graphical shapes to be constructed and reused
QPainterPathStroker	Used to generate fillable outlines for a given painter path
QPalette	Contains color groups for each widget state
QPen	Defines how a QPainter should draw lines and outlines of shapes
QPicture	Paint device that records and replays QPainter commands
QPictureIO	Contains parameters for loading and saving pictures
QPixmap	Off-screen image representation that can be used as a paint device
QPixmapCache	Application-wide cache for pixmaps
QPoint	Defines a point in the plane using integer precision
QPointF	Defines a point in the plane using floating point precision
QPolygon	Vector of points using integer precision
QPolygonF	Vector of points using floating point precision
QPrintEngine	Defines an interface for how QPrinter interacts with a given printing subsystem
QPrintPreviewWidget	Widget for previewing page layouts for printer output
QPrinter	Paint device that paints on a printer
QRadialGradient	Used in combination with QBrush to specify a radial gradient brush
QRect	Defines a rectangle in the plane using integer precision
QRectF	Defines a rectangle in the plane using floating point precision
QRegion	Specifies a clip region for a painter
QSize	Defines the size of a two-dimensional object using integer point precision
QSizeF	Defines the size of a two-dimensional object using floating point precision
QSound	Access to the platform audio facilities
QStyleOptionGraphicsItem	Used to describe the parameters needed to draw a QGraphicsItem
QStylePainter	Convenience class for drawing QStyle elements inside a widget
QSvgGenerator	Paint device that is used to create SVG drawings
QSvgRenderer	Used to draw the contents of SVG files onto paint devices
QSvgWidget	Widget that is used to display the contents of Scalable Vector Graphics (SVG) files
QTimeLine	Timeline for controlling animations
QTransform	Specifies 2D transformations of a coordinate system
Phonon::VideoWidget	Widget that is used to display video


Non-GUI Classes

The non-GUI classes are general-purpose collection and string classes
that may be used independently of the GUI classes.

In particular, these classes do not depend on QApplication at all, and
so can be used in non-GUI programs.

QBitArray	Array of bits
QByteArray	Array of bytes
QByteArrayMatcher	Holds a sequence of bytes that can be quickly matched in a byte array
QCache	Template class that provides a cache
QCryptographicHash	Way to generate cryptographic hashes
QFlags	Type-safe way of storing OR-combinations of enum values
QHash	Template class that provides a hash-table-based dictionary
QLinkedList	Template class that provides linked lists
QList	Template class that provides lists
QMap	Template class that provides a skip-list-based dictionary
QMultiHash	Convenience QHash subclass that provides multi-valued hashes
QMultiMap	Convenience QMap subclass that provides multi-valued maps
QPair	Template class that stores a pair of items
QQueue	Generic container that provides a queue
QRegExp	Pattern matching using regular expressions
QSet	Template class that provides a hash-table-based set
QStack	Template class that provides a stack
QString	Unicode character string
QStringList	List of strings
QStringMatcher	Holds a sequence of characters that can be quickly matched in a Unicode string
QStringRef	Thin wrapper around QString substrings
QTextBoundaryFinder	Way of finding Unicode text boundaries in a string
QVarLengthArray	Low-level variable-length array
QVector	Template class that provides a dynamic array




These classes form the basis of the Qt Object Model.

QMetaClassInfo	Additional information about a class
QMetaEnum	Meta-data about an enumerator
QMetaMethod	Meta-data about a member function
QMetaObject	Contains meta-information about Qt objects
QMetaProperty	Meta-data about a property
QMetaType	Manages named types in the meta-object system
QObject	The base class of all Qt objects
QObjectCleanupHandler	Watches the lifetime of multiple QObjects
QPointer	Template class that provides guarded pointers to QObjects
QVariant	Acts like a union for the most common Qt data types


Organizers

These classes are used to organize and group GUI primitives into more complex applications or dialogs.

QButtonGroup	Container to organize groups of button widgets
QGroupBox	Group box frame with a title
QSplitter	Implements a splitter widget
QSplitterHandle	Handle functionality of the splitter
QStackedWidget	Stack of widgets where only one widget is visible at a time
QTabWidget	Stack of tabbed widgets


Standard Dialog Classes

These classes are complex widgets, composed of simpler widgets; dialog boxes, generally.

QColorDialog	Dialog widget for specifying colors
QDialog	The base class of dialog windows
QErrorMessage	Error message display dialog
QFileDialog	Dialog that allow users to select files or directories
QFontDialog	Dialog widget for selecting a font
QInputDialog	Simple convenience dialog to get a single value from the user
QMessageBox	Modal dialog for informing the user or for asking the user a question and receiving an answer
QPrintDialog	Dialog for specifying the printer's configuration
QProgressDialog	Feedback on the progress of a slow operation


---------------


Potentially useful in the short run

QWebView	Widget that is used to view and edit web documents

QCheckBox	Checkbox with a text label
QComboBox	Combined button and popup list
QDial		Rounded range control (like a speedometer or potentiometer)
QFontComboBox	Combobox that lets the user select a font family
QLabel		Text or image display
QLineEdit	One-line text editor
QMenu		Menu widget for use in menu bars, context menus, and other popup menus
QProgressBar	Horizontal or vertical progress bar
QPushButton	Command button
QRadioButton	Radio button with a text label
QScrollArea	Scrolling view onto another widget
QScrollBar	Vertical or horizontal scroll bar
QSizeGrip	Resize handle for resizing top-level windows
QSlider		Vertical or horizontal slider
QSpinBox	Spin box widget
QTabBar		Tab bar, e.g. for use in tabbed dialogs
QTabWidget	Stack of tabbed widgets
QToolBox	Column of tabbed widget items
QToolButton	Quick-access button to commands or options, usually used inside a QToolBar
QWidget		The base class of all user interface objects




QGridLayout	Lays out widgets in a grid
QGroupBox	Group box frame with a title
QLayout		The base class of geometry managers
QLayoutItem	Abstract item that a QLayout manipulates
QSizePolicy	Layout attribute describing horizontal and vertical resizing policy
QSpacerItem	Blank space in a layout
QStackedLayout	Stack of widgets where only one widget is visible at a time
QStackedWidget	Stack of widgets where only one widget is visible at a time
QWidgetItem	Layout item that represents a widget
